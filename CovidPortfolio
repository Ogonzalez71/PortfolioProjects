
Select *
from PortfolioProject1..CovidVaccinations
order by 3,4

SELECT Location, date, total_cases, new_cases, total_deaths, population
From PortfolioProject1..CovidDeaths2
where location like '%north america%'
and continent is not null


--Looking at Total Cases vs Total Deaths
--Shows likelihood of dying if you contract covid in North America 

SELECT location, date, total_cases, total_deaths, (total_deaths * 1.0/total_cases) as DeathPercentage
From PortfolioProject1..CovidDeaths2
where location like '%North America%'
order by 1,2


-- Looking at Total Cases vs Population 
-- Shows what percentage of population got Covid

SELECT location, date, population, total_cases, (total_cases* 1.0/population) as PercentofPopulationInfected
From PortfolioProject1..CovidDeaths2
where location like '%North America%'
order by 1,2

-- Looking at Countries with Highest Infection rate compared to Population 

SELECT location, population, MAX(total_cases) as HighestInfectionCount, Max((total_cases* 1.0/population)) as PercentofPopulationInfected
From PortfolioProject1..CovidDeaths2
--where location like '%North America%'
group by location, Population
order by PercentofPopulationInfected desc

-- Showing Country with Highest Death Count per Population 

SELECT continent, Max(cast(total_deaths as int)) as TotalDeathCount
From PortfolioProject1..CovidDeaths2
--where location like '%North America%'
where continent is not null
group by continent
order by TotalDeathCount desc

--Lets brake things down by continent 
-- Showing continents with highest death count per population 

SELECT continent, Max(cast(total_deaths as int)) as TotalDeathCount
From PortfolioProject1..CovidDeaths2
--where location like '%North America%'
where continent is not null
group by continent
order by TotalDeathCount desc

-- Global Numbers 

SELECT date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int)) * 1.0 / NULLIF(SUM(new_cases), 0) as DeathPercentage
FROM PortfolioProject1..CovidDeaths2
WHERE continent is not null
GROUP BY date
ORDER BY 1,2

-- deaths acrros the world
SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int)) * 1.0 / NULLIF(SUM(new_cases), 0) as DeathPercentage
FROM PortfolioProject1..CovidDeaths2
WHERE continent is not null
--GROUP BY date
ORDER BY 1,2

-- looking at total population vs vaccination

select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
(RollingPeopleVaccinated/population)*100
from PortfolioProject1..coviddeaths2 dea
Join PortfolioProject1..CovidVaccinations2 vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null
order by 2,3

-- Using CTE 

With PopvsVac (Continent, Location, Date, Population, new_vaccinations, RollingPeopleVaccinated)
as 
(
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
-- (RollingPeopleVaccinated/population)*100
from PortfolioProject1..coviddeaths2 dea
Join PortfolioProject1..CovidVaccinations2 vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null
-- order by 2,3)
)
select * , (RollingPeopleVaccinated*1.0/Population)
from PopvsVac

--Temp table 

Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime, 
Population numeric,
New_Vaccinations numeric, 
RollingPeopleVacinated numeric
)
Insert into #PercentPopulationVaccinated
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
-- (RollingPeopleVaccinated/population)*100
from PortfolioProject1..coviddeaths2 dea
Join PortfolioProject1..CovidVaccinations2 vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null
-- order by 2,3)

Select *, (RollingPeopleVacinated*1.0/Population)
from #PercentPopulationVaccinated

--Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as 
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) over (partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
-- (RollingPeopleVaccinated/population)*100
from PortfolioProject1..coviddeaths2 dea
Join PortfolioProject1..CovidVaccinations2 vac
    On dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not null
-- order by 2,3)